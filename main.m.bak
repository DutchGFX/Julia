clear
clear global
close all

%% Constants
goodCValues = [(-0.7+0.27015*1i) (0.285+0.01i)];
myGoodCValues = [(pi/8+pi/4*1i) (exp(-1)-exp(-2)*1i)];
myGoodCValues4 = [(pi/8)+(pi/3)*1i];

powerN = 4; %only used for caption
iters = 100;
xcen = 0;
ycen = 0;
points = 2000;
d=2;

%% Function (n=2)
c = myGoodCValues(1);
c = goodCValues(2);
func = @(v) v.^2+c; % v is a complex number

% N>2
c = myGoodCValues4(1);
func = @(v) v.^4+c; % v is a complex number

%% Grid
x=linspace(xcen-d,xcen+d,points);
y=linspace(ycen-d,ycen+d,points);
[x,y]=meshgrid(x,y); %creates 2 matrices

kGrid = zeros(size(x)); % will store k values
%% Calculations
z = x+1i.*y;
for iter=1:iters
    z=func(z); % next iteration
    escaped = abs(z)>2; % particles that left the circle radius 2 this iter
    z(escaped) = NaN; % prevent further iterations
    kGrid(escaped) = iter;
    
end

figure1 = figure('Name','Julia Sets','NumberTitle','off');
imagesc(kGrid)
colormap('copper')
titlee = sprintf('Julia Set of $Z^%g+C$ for $C = %.4f + %.4fi$',powerN,real(c),imag(c)); 
title(titlee,'Interpreter','latex')
axis equal
axis off
saveas(figure1,[pwd '\Julia Sets\figures\' sprintf('%.4f+i%.4f',real(c),imag(c)) '.png']);

%{
store k, and use it for imagesc with the position
%}

%{
When 
%}